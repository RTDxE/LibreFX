[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
render_mode blend_premul_alpha;
uniform float inner = 0.0;
uniform float outer = 1.0;
uniform vec4 outline_col = vec4(1,1,1,1);
void fragment()
{

    

	vec4 col = texture(TEXTURE, UV);
	
	
	if(col.a < (1.0-inner))
	{
		float up = texture(TEXTURE, UV + vec2(0.0, TEXTURE_PIXEL_SIZE.y)).a;
		float right = texture(TEXTURE, UV - vec2(TEXTURE_PIXEL_SIZE.x, 0.0)).a;
		float down = texture(TEXTURE, UV - vec2(0.0, TEXTURE_PIXEL_SIZE.y)).a;
		float left = texture(TEXTURE, UV + vec2(TEXTURE_PIXEL_SIZE.x, 0.0)).a;
		if(up+down+right+left > (1.0-outer)){
			col = outline_col;
		}
	}

	COLOR = col;

}
"

[resource]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/inner = 0.9
shader_param/outer = 0.7
shader_param/outline_col = Plane( 1, 1, 1, 1 )
